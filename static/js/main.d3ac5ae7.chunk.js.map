{"version":3,"sources":["APIs/useFetchJobs.js","Screens/Job.js","Screens/SkeletonLoading.js","Components/JobsPagination.js","Components/SearchForm.js","App.js","index.js"],"names":["ACTIONS","MAKE_REQUEST","GET_DATA","ERROR","UPDATE_HAS_NEXT_PAGE","BASE_URL","reducer","state","action","type","loading","jobs","payload","error","hasNextPage","Job","job","useState","open","setOpen","Card","className","Body","Title","title","company","Subtitle","Date","created_at","toLocaleDateString","Badge","variant","location","style","wordBreak","source","how_to_apply","height","alt","src","company_logo","Text","Button","onClick","prevOpen","Collapse","in","description","SkeletonLoading","color","highlightColor","width","count","JobsPagination","page","setPage","adjustPage","amount","prevPage","Pagination","Prev","Item","Ellipsis","active","Next","SearchForm","params","onParamChange","Form","Row","Group","as","Col","Label","Control","onChange","value","name","xs","Check","full_time","id","label","App","setParams","useReducer","dispatch","useEffect","cancelToken1","axios","CancelToken","get","cancelToken","token","markdown","then","res","data","catch","e","isCancel","cancelToken2","length","cancel","useFetchJobs","Container","param","target","prevParams","map","key","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d3ac5ae7.chunk.js","sourcesContent":["import { useReducer, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst ACTIONS = {\r\n  MAKE_REQUEST: \"make-request\",\r\n  GET_DATA: \"get-data\",\r\n  ERROR: \"error\",\r\n  UPDATE_HAS_NEXT_PAGE: \"update-has-next-page\",\r\n};\r\n\r\nconst BASE_URL =\r\n  \"https://cors-anywhere.herokuapp.com/https://jobs.github.com/positions.json\";\r\n\r\nfunction reducer(state, action) {\r\n  switch (action.type) {\r\n    case ACTIONS.MAKE_REQUEST:\r\n      return { loading: true, jobs: [] };\r\n    case ACTIONS.GET_DATA:\r\n      return { ...state, loading: false, jobs: action.payload.jobs };\r\n    case ACTIONS.ERROR:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload.error,\r\n        jobs: [],\r\n      };\r\n    case ACTIONS.UPDATE_HAS_NEXT_PAGE:\r\n      return { ...state, hasNextPage: action.payload.hasNextPage };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default function useFetchJobs(params, page) {\r\n  const [state, dispatch] = useReducer(reducer, { jobs: [], loading: true });\r\n\r\n  useEffect(() => {\r\n    const cancelToken1 = axios.CancelToken.source();\r\n    dispatch({ type: ACTIONS.MAKE_REQUEST });\r\n    axios\r\n      .get(BASE_URL, {\r\n        cancelToken: cancelToken1.token,\r\n        params: { markdown: true, page: page, ...params },\r\n      })\r\n      .then((res) => {\r\n        dispatch({ type: ACTIONS.GET_DATA, payload: { jobs: res.data } });\r\n      })\r\n      .catch((e) => {\r\n        if (axios.isCancel(e)) return;\r\n        dispatch({ type: ACTIONS?.ERROR, payload: { error: e } });\r\n      });\r\n\r\n    const cancelToken2 = axios.CancelToken.source();\r\n    axios\r\n      .get(BASE_URL, {\r\n        cancelToken: cancelToken2.token,\r\n        params: { markdown: true, page: page + 1, ...params },\r\n      })\r\n      .then((res) => {\r\n        dispatch({\r\n          type: ACTIONS.UPDATE_HAS_NEXT_PAGE,\r\n          payload: { hasNextPage: res.data.length !== 0 },\r\n        });\r\n      })\r\n      .catch((e) => {\r\n        if (axios.isCancel(e)) return;\r\n        dispatch({ type: ACTIONS.ERROR, payload: { error: e } });\r\n      });\r\n\r\n    return () => {\r\n      cancelToken1.cancel();\r\n      cancelToken2.cancel();\r\n    };\r\n  }, [params, page]);\r\n\r\n  return state;\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Card, Badge, Button, Collapse } from \"react-bootstrap\";\r\nimport ReactMarkdown from \"react-markdown\";\r\nimport { FcViewDetails } from \"react-icons/fc\";\r\nimport { GoLocation } from \"react-icons/go\";\r\nimport \"./Job.css\";\r\n\r\n\r\nexport default function Job({ job }) {\r\n  const [open, setOpen] = useState(false);\r\n  return (\r\n    <Card className=\"mb-3 Card\" >\r\n      <Card.Body>\r\n        <div className=\"d-flex justify-content-between\">\r\n          <div>\r\n            <Card.Title>\r\n              {job.title} -{\" \"}\r\n              <span className=\"text-muted font-weight-light\">\r\n                {job.company}\r\n              </span>\r\n            </Card.Title>\r\n            <Card.Subtitle className=\"text-muted mb-2\">\r\n              {new Date(job.created_at).toLocaleDateString()}\r\n            </Card.Subtitle>\r\n            <Badge variant=\"secondary\" className=\"mr-2\">\r\n              {job.type}\r\n            </Badge>\r\n            <Badge variant=\"secondary\">\r\n            <GoLocation />\r\n            {\"  \"}\r\n              {job.location}\r\n            </Badge>\r\n            <div style={{ wordBreak: \"break-all\" }}>\r\n              <ReactMarkdown source={job.how_to_apply} />\r\n            </div>\r\n          </div>\r\n          <img\r\n            className=\"d-none d-md-block\"\r\n            height=\"50\"\r\n            alt={job.company}\r\n            src={job.company_logo}\r\n          />\r\n        </div>\r\n        <Card.Text>\r\n          <Button\r\n            onClick={() => setOpen((prevOpen) => !prevOpen)}\r\n            variant=\"primary\"\r\n          >\r\n            {open ? \"Hide Details\" : \"View Details\"} <FcViewDetails />\r\n          </Button>\r\n        </Card.Text>\r\n        <Collapse in={open}>\r\n          <div className=\"mt-4\">\r\n            <ReactMarkdown source={job.description} />\r\n          </div>\r\n        </Collapse>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Skeleton, { SkeletonTheme } from \"react-loading-skeleton\";\r\nimport { Card, Badge, Button } from \"react-bootstrap\";\r\nimport { FcViewDetails } from \"react-icons/fc\";\r\nimport { GoLocation } from \"react-icons/go\";\r\n\r\nconst SkeletonLoading = () => {\r\n  return (\r\n    <div>\r\n      <SkeletonTheme color=\"#4b5d67\" highlightColor=\"#6b8590\">\r\n        <Card className=\"mb-3 bg-dark\">\r\n          <Card.Body>\r\n            <>\r\n              <Card.Title>\r\n                <Skeleton width={200} />\r\n              </Card.Title>\r\n              <Badge variant=\"secondary\" className=\"mr-2\">\r\n                <GoLocation />\r\n                {\"  \"}\r\n                Location\r\n              </Badge>\r\n              <Skeleton count={6} />\r\n              <br />\r\n              <Button variant=\"primary\">\r\n                View Details <FcViewDetails />\r\n              </Button>\r\n            </>\r\n          </Card.Body>\r\n        </Card>\r\n      </SkeletonTheme>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SkeletonLoading;\r\n","import React from \"react\";\r\nimport { Pagination } from \"react-bootstrap\";\r\n\r\nexport default function JobsPagination({ page, setPage, hasNextPage }) {\r\n  //HELPER FUNCTION\r\n  function adjustPage(amount) {\r\n    setPage((prevPage) => prevPage + amount);\r\n  }\r\n\r\n  return (\r\n    <Pagination>\r\n      {page !== 1 && <Pagination.Prev onClick={() => adjustPage(-1)} />}\r\n      {page !== 1 && (\r\n        <Pagination.Item onClick={() => setPage(1)}>1</Pagination.Item>\r\n      )}\r\n      {page > 2 && <Pagination.Ellipsis />}\r\n      {page > 2 && (\r\n        <Pagination.Item onClick={() => adjustPage(-1)}>\r\n          {page - 1}\r\n        </Pagination.Item>\r\n      )}\r\n      <Pagination.Item active>{page}</Pagination.Item>\r\n      {hasNextPage && (\r\n        <Pagination.Item onClick={() => adjustPage(1)}>\r\n          {page + 1}\r\n        </Pagination.Item>\r\n      )}\r\n      {hasNextPage && <Pagination.Next onClick={() => adjustPage(1)} />}\r\n    </Pagination>\r\n  )\r\n}\r\n","import React from \"react\";\r\nimport { Form, Col } from \"react-bootstrap\";\r\n\r\nconst SearchForm = (params, onParamChange) => {\r\n  return (\r\n    <Form className=\"mb-4 text-white bg-dark \">\r\n      <Form.Row className=\"align-items-end\">\r\n        <Form.Group as={Col}>\r\n          <Form.Label>Description</Form.Label>\r\n          <Form.Control\r\n            onChange={onParamChange}\r\n            value={params.description}\r\n            name=\"description\"\r\n            type=\"text\"\r\n          />\r\n        </Form.Group>\r\n        <Form.Group as={Col}>\r\n          <Form.Label>Location</Form.Label>\r\n          <Form.Control\r\n            onChange={onParamChange}\r\n            value={params.location}\r\n            name=\"location\"\r\n            type=\"text\"\r\n          />\r\n        </Form.Group>\r\n        <Form.Group as={Col} xs=\"auto\" className=\"ml-2\">\r\n          <Form.Check\r\n            onChange={onParamChange}\r\n            value={params.full_time}\r\n            name=\"full_time\"\r\n            id=\"full-time\"\r\n            label=\"Only Full Time\"\r\n            type=\"checkbox\"\r\n            className=\"mb-2\"\r\n          />\r\n        </Form.Group>\r\n      </Form.Row>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default SearchForm;\r\n","import React, { useState } from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport useFetchJobs from \"./APIs/useFetchJobs\";\nimport Job from \"./Screens/Job\";\nimport SkeletonLoading from \"./Screens/SkeletonLoading\";\nimport { GoMarkGithub } from \"react-icons/go\";\nimport JobsPagination from \"./Components/JobsPagination\";\nimport SearchForm from \"./Components/SearchForm\";\n\nfunction App() {\n  const [params, setParams] = useState({});\n  const [page, setPage] = useState(1);\n\n  const { jobs, loading, error, hasNextPage } = useFetchJobs(params, page);\n\n  function handleParamChange(e) {\n    const param = e.target.name;\n    const value = e.target.value;\n    setPage(1);\n    setParams((prevParams) => {\n      return { ...prevParams, [param]: value };\n    });\n  }\n\n  return (\n    <div>\n      <Container className=\"my-4\">\n        {\n          <header className=\"btn\">\n            <h1 className=\" text-light mb-4 \">\n              <GoMarkGithub />\n              {\"  \"} GitJOBS\n            </h1>\n          </header>\n        }\n\n        <SearchForm params={params} onParamChange={handleParamChange} />\n\n        <JobsPagination\n          page={page}\n          setPage={setPage}\n          hasNextPage={hasNextPage}\n        />\n\n        {loading && (\n          <>\n            <SkeletonLoading />\n            <SkeletonLoading />\n            <SkeletonLoading />\n            <SkeletonLoading />\n            <SkeletonLoading />\n          </>\n        )}\n\n        {error && <h1>ERROR{error}. Try refreshing the page.</h1>}\n        {jobs.map((job) => {\n          return <Job key={job.id} job={job} />;\n        })}\n        <JobsPagination\n          page={page}\n          setPage={setPage}\n          hasNextPage={hasNextPage}\n        />\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}